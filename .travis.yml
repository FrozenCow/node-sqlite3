language: node_js

node_js:
 - "0.10"
 - "0.8"

env:
  global:
    - secure: QhuP5E/kYL1j1KDkHGJtk6DSJr1RH4DR/JrC62Viuf5Du8jE+i0kPWfF2MxtuEmKo35orhpu8t8mzKygWfuO63WPuuIE9qd/+V/y99Lqcj0tEN6wJ5RnywktbTJWg23zphjhmYq3Xj8DLVEikCZBwHtlbygkO9Q60cn1PK+bnPg=
    - secure: HxCS2dQAWI0KmCFnFNNZoucG4FeAW+itG7+Hp0dNtwmxZzGOZYFO2bZcGvTAMNfVN++oqLxTebYQI1oB5yUl5mPJjrjthaGS6Zq3S6rfJcXiv+icYgEXlR6ejQ97dsHw1Jeg8nedCQlI4kHfvG6pgBLhq9hnugxH1Cjhdt14E9U=

before_install:
 - sudo apt-get -qq update

install:
 # test installing from a binary
 - npm install
 - npm install mocha
 - npm test

before_script:
 - make clean

script:
 # put node-pre-gyp on path
 - export PATH=./node_modules/.bin/:$PATH
 # test source compile with internal libsqlite3
 - npm install
 - npm test
 # publish success
 - SHOULD_PUBLISH=false
 - if [[ $TRAVIS_BRANCH == `git describe --exact-match --tags HEAD` ]]; then SHOULD_PUBLISH=true; fi
 - echo $SHOULD_PUBLISH
 - if [[ $TRAVIS_COMMIT == *\[publish\]* ]]; then SHOULD_PUBLISH=true; fi
 - echo $SHOULD_PUBLISH
 - if [[ $TRAVIS_COMMIT =~ [publish] ]]; then SHOULD_PUBLISH=true; fi
 - echo $SHOULD_PUBLISH
 - if [[ $SHOULD_PUBLISH == true ]]; then node-pre-gyp package publish; fi;
 # test source compile against external libsqlite3
 - sudo apt-get -qq install libsqlite3-dev
 - make clean
 - npm install --build-from-source --sqlite=/usr
 - npm test
 - make clean
 # node v0.8 and above provide pre-built 32 bit and 64 bit linux binaries
 # so here we use the 32 bit ones to also test 32 bit builds
 - export NVER=`node -v`
 - wget http://nodejs.org/dist/${NVER}/node-${NVER}-linux-x86.tar.gz
 - tar xf node-${NVER}-linux-x86.tar.gz
 - export PATH=$(pwd)/node-${NVER}-linux-x86/bin:$PATH
 - sudo apt-get -y install binutils:i386 cpp:i386 gcc-4.6:i386 g++-4.6:i386 libstdc++6-4.6-dev:i386 | true
 # test source compile in 32 bit mode with internal libsqlite3
 - CC=gcc-4.6 CXX=g++-4.6 npm install --build-from-source
 # publish success
 - if [[ $SHOULD_PUBLISH == true ]]; then node-pre-gyp package publish; fi;
 - npm test
 - make clean
 - sudo apt-get -y install libsqlite3-dev:i386
 # test source compile in 32 bit mode against external libsqlite3
 - CC=gcc-4.6 CXX=g++-4.6 npm install --build-from-source --sqlite=/usr
 - npm test
